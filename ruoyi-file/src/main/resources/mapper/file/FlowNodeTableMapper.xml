<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.file.mapper.FlowNodeMapper">

    <resultMap type="FlowNode" id="FlowNodeResult">
        <result property="id"    column="id"    />
        <result property="projectId"    column="project_id"    />
        <result property="type"    column="type"    />
        <result property="name"    column="name"    />
        <result property="left"    column="left"    />
        <result property="top"    column="top"    />
        <result property="ico"    column="ico"    />
        <result property="state"    column="state"    />
    </resultMap>

    <sql id="selectFlowNodeVo">
        select id, project_id, type, name, 'left', top, ico, state from flow_node
    </sql>

    <select id="selectFlowNodeList" parameterType="FlowNode" resultMap="FlowNodeResult">
        <include refid="selectFlowNodeVo"/>
        <where>
            <if test="projectId != null  and projectId != ''"> and project_id = #{projectId}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="left != null  and left != ''"> and left = #{left}</if>
            <if test="top != null  and top != ''"> and top = #{top}</if>
            <if test="ico != null  and ico != ''"> and ico = #{ico}</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
        </where>
    </select>

    <select id="selectFlowNodeById" parameterType="String" resultMap="FlowNodeResult">
        <include refid="selectFlowNodeVo"/>
        where id = #{id}
    </select>

    <insert id="insertFlowNode" parameterType="FlowNode">
        insert into flow_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="projectId != null and projectId != ''">project_id,</if>
            <if test="type != null">type,</if>
            <if test="name != null">name,</if>
            <if test="left != null and left != ''">left,</if>
            <if test="top != null and top != ''">top,</if>
            <if test="ico != null">ico,</if>
            <if test="state != null">state,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="projectId != null and projectId != ''">#{projectId},</if>
            <if test="type != null">#{type},</if>
            <if test="name != null">#{name},</if>
            <if test="left != null and left != ''">#{left},</if>
            <if test="top != null and top != ''">#{top},</if>
            <if test="ico != null">#{ico},</if>
            <if test="state != null">#{state},</if>
        </trim>
    </insert>

    <update id="updateFlowNode" parameterType="FlowNode">
        update flow_node
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectId != null and projectId != ''">project_id = #{projectId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="name != null">name = #{name},</if>
            <if test="left != null and left != ''">left = #{left},</if>
            <if test="top != null and top != ''">top = #{top},</if>
            <if test="ico != null">ico = #{ico},</if>
            <if test="state != null">state = #{state},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFlowNodeById" parameterType="String">
        delete from flow_node where id = #{id}
    </delete>

    <delete id="deleteFlowNodeByIds" parameterType="String">
        delete from flow_node where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>